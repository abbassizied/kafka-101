version: "3.9"
services:

  ####################################
  ######### Kafka + UI ###############
  ####################################

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-101-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - kafka-101-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-101-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka

  ###############################################
  ######### Mysql Server + phpMyAdmin ###########
  ###############################################

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: productdb   # default db (others created by init script)
    ports:
      - "3306:3306"
    networks:
      - kafka-101-net
    volumes:
      - ./docker/mysql_data:/var/lib/mysql
      - ./docker/init-db:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: "no"
    depends_on:
      - mysql
    ports:
      - 8077:80
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpass
    networks:
      - kafka-101-net

###############################################
######### stack networks + volumes ############
###############################################

volumes:
  mysql_data:

networks:
  kafka-101-net:
    driver: bridge
